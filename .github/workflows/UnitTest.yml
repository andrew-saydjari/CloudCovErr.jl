name: Unit test
on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:
  pull_request_review:
    types: [submitted]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version: ['1.6', '1']  #, 'nightly']
        os: [ubuntu-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v2
      - name: "Set up Julia"
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}

      - name: Cache artifacts
        uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: "Fix Conda"
        env:
          PYTHON: ""
        run: julia -e 'using Pkg; Pkg.add("PyCall"); using PyCall; PyCall.Conda.add_channel("conda-forge"); PyCall.Conda.add(["python=3.9","crowdsourcephoto=0.5.6","scipy==1.6.1","astropy=5.2.2"]); Pkg.build("PyCall")'
      - name: "Unit Test"
        uses: julia-actions/julia-runtest@v1
        env:
          PYTHON: ""
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v2
        if: matrix.os == 'ubuntu-latest' && matrix.version == '1'
        with:
          file: lcov.info
